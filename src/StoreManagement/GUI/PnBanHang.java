/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package StoreManagement.GUI;

import StoreManagement.BUS.SanPhamBUS;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import StoreManagement.DTO.SanPham;
import java.text.DecimalFormat;
import java.util.Vector;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author thanh
 */
public class PnBanHang extends javax.swing.JPanel {
    
    static SanPhamBUS spBUS = new SanPhamBUS();
    private XuatHoaDon hoaDon = new XuatHoaDon();
    static DefaultTableModel dtmSanPham, dtmGioHang;

    public PnBanHang() {
        initComponents();
        this.setBounds(0, 0, 1030, 844);
        dtmSanPham = (DefaultTableModel) tblSanPham.getModel();
        dtmGioHang = (DefaultTableModel) tblGioHang.getModel();

        loadDataTblSP();
        
    }
    static void loadDataTblSP(){
        dtmSanPham.setRowCount(0);
        
        ArrayList<SanPham> dssp = null;
        dssp = spBUS.getListSanPham();
        
        for (SanPham sp : dssp) {
            Vector vec = new Vector();
            vec.add(sp.getMaSP());
            vec.add(sp.getTenSP());
            vec.add(sp.getDonViTinh());
            vec.add(sp.getDonGia());
            vec.add(sp.getSoLuong());
            dtmSanPham.addRow(vec);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        scrTblSanPham = new javax.swing.JScrollPane();
        tblSanPham = new MyCustom.MyTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMaSp = new javax.swing.JTextField();
        txtTenSP = new javax.swing.JTextField();
        txtDonGia = new javax.swing.JTextField();
        spnSL = new javax.swing.JSpinner();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        scrTblGioHang = new javax.swing.JScrollPane();
        tblGioHang = new MyCustom.MyTable();
        jLabel7 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnXuatHd = new javax.swing.JButton();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1030, 844));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        jLabel1.setText("Danh sách sản phẩm");

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "Đơn vị tính", "Đơn giá", "Còn lại"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.getTableHeader().setReorderingAllowed(false);
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        scrTblSanPham.setViewportView(tblSanPham);
        tblSanPham.getColumnModel().getColumn(0).setPreferredWidth(80);
        tblSanPham.getColumnModel().getColumn(1).setPreferredWidth(260);
        tblSanPham.getColumnModel().getColumn(2).setPreferredWidth(100);
        tblSanPham.getColumnModel().getColumn(3).setPreferredWidth(120);
        tblSanPham.getColumnModel().getColumn(4).setPreferredWidth(70);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        jLabel2.setText("Chi tiết sản phẩm");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel3.setText("Mã SP");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel4.setText("Tên SP");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel5.setText("Số lượng");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        jLabel6.setText("Đơn giá");

        txtMaSp.setEditable(false);
        txtMaSp.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N

        txtTenSP.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N

        txtDonGia.setEditable(false);
        txtDonGia.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N

        spnSL.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        spnSL.setEnabled(false);
        spnSL.setValue(1);

        tblGioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGioHang.getTableHeader().setReorderingAllowed(false);
        scrTblGioHang.setViewportView(tblGioHang);
        tblGioHang.getColumnModel().getColumn(0).setPreferredWidth(80);
        tblGioHang.getColumnModel().getColumn(1).setPreferredWidth(260);
        tblGioHang.getColumnModel().getColumn(2).setPreferredWidth(90);
        tblGioHang.getColumnModel().getColumn(3).setPreferredWidth(120);
        tblGioHang.getColumnModel().getColumn(4).setPreferredWidth(130);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        jLabel7.setText("Giỏ hàng");

        btnThem.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnTimKiem.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnXuatHd.setFont(new java.awt.Font("Arial", 0, 20)); // NOI18N
        btnXuatHd.setText("Xuất hóa đơn");
        btnXuatHd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatHdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scrTblGioHang, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
                            .addComponent(scrTblSanPham)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(jLabel7)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(66, 66, 66))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                            .addComponent(spnSL)
                            .addComponent(txtDonGia)
                            .addComponent(txtMaSp, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(49, 49, 49))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnXuatHd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(43, 43, 43))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMaSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(spnSL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnTimKiem)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(scrTblSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnXuatHd)
                            .addComponent(btnXoa))
                        .addGap(195, 195, 195))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(scrTblGioHang, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(13, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        String name = txtTenSP.getText().toLowerCase();
        dtmSanPham.setRowCount(0);
        ArrayList<SanPham> dssp = null;
        dssp = spBUS.getListSPbyName(name);

        for (SanPham sp : dssp) {
            Vector vec = new Vector();
            vec.add(sp.getMaSP());
            vec.add(sp.getTenSP());
            vec.add(sp.getDonViTinh());
            vec.add(sp.getDonGia());
            vec.add(sp.getSoLuong());
            dtmSanPham.addRow(vec);
        }
        
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnXuatHdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatHdActionPerformed
        // TODO add your handling code here:
         ArrayList<Vector> dsGioHang = new ArrayList<>();
        int row = tblGioHang.getRowCount();
        if (row == 0) {
            JOptionPane.showMessageDialog(null, "Giỏ hàng chưa có sàn phẩm nào!", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        };
        float tongTien = 0;
        for (int i = 0; i < row; i++) {
            Vector vec = new Vector();
            vec.add(tblGioHang.getValueAt(i, 0));
            vec.add(tblGioHang.getValueAt(i, 1));
            vec.add(tblGioHang.getValueAt(i, 2));
            vec.add(tblGioHang.getValueAt(i, 3));
            vec.add(tblGioHang.getValueAt(i, 4));
            tongTien += Float.parseFloat(tblGioHang.getValueAt(i, 4).toString());
            dsGioHang.add(vec);
        }
        XuatHoaDon hoaDon = new XuatHoaDon(dsGioHang, tongTien, Home.nv );
        hoaDon.setVisible(true); 
        if (hoaDon.checkBanHang) {
            dtmGioHang.setRowCount(0);
        }
    }//GEN-LAST:event_btnXuatHdActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        int row = tblSanPham.getSelectedRow();
        
        String ma = txtMaSp.getText();
        String ten = txtTenSP.getText();
        if(ma.trim().equals("")||ten.trim().equals("")||row==-1){
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn sản phẩm nào", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
       
        Float donGia = Float.parseFloat(txtDonGia.getText());
        int soLuong = (Integer) spnSL.getValue();
        int soLuongConLai = (Integer) tblSanPham.getValueAt(row, 4);
        
        if(soLuong>soLuongConLai){
            JOptionPane.showMessageDialog(null, "Sản phẩm đã hết hàng", "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        txtMaSp.setText("");
        txtTenSP.setText("");
        txtDonGia.setText("");
        spnSL.setValue(1);
        
        for (int i = 0; i < tblGioHang.getRowCount(); i++) {
            String maTbl = tblGioHang.getValueAt(i, 0).toString();
            if (maTbl.equals(ma)) {
                int soLuongAdd = Integer.parseInt(tblGioHang.getValueAt(i, 2).toString());
                soLuongAdd += soLuong;
                tblGioHang.setValueAt(soLuongAdd, i, 2);
                tblGioHang.setValueAt((Float)(soLuongAdd * donGia), i, 4);
                
                //cap nhap so luong san pham
                spBUS.updateQuantitySP(ma, soLuong);
                spBUS.getListSanPham();
                loadDataTblSP();
                return;
            }
        }
        Vector vec = new Vector();
        vec.add(ma);
        vec.add(ten);
        vec.add(soLuong);
        vec.add(donGia);
        vec.add((Float) (soLuong * donGia));
        spBUS.updateQuantitySP(ma, soLuong);
        spBUS.getListSanPham();
        loadDataTblSP();
        dtmGioHang.addRow(vec);
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        int row = tblSanPham.getSelectedRow();
        if (row > -1) {
            String ma = tblSanPham.getValueAt(row, 0) + "";
            String ten = tblSanPham.getValueAt(row, 1) + "";
            Float donGia = Float.parseFloat(tblSanPham.getValueAt(row, 3).toString());
            int soLuong = Integer.parseInt(tblSanPham.getValueAt(row, 4).toString());
            if (soLuong < 1) {
                JOptionPane.showMessageDialog(null, "Sản phẩm đã hết hàng","Thông báo", JOptionPane.ERROR_MESSAGE);
                return;
            }
            spnSL.setValue(1);
            txtMaSp.setText(ma);
            txtTenSP.setText(ten);
            txtDonGia.setText(donGia.toString());
            spnSL.setEnabled(true);
        }

    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int row = tblGioHang.getSelectedRow();
        if (row > -1) {
            String ma = tblGioHang.getValueAt(row, 0).toString();
            int soLuong = Integer.parseInt(tblGioHang.getValueAt(row, 2).toString());
            spBUS.updateQuantitySP(ma, -soLuong);
            loadDataTblSP();
            dtmGioHang.removeRow(row);
        }
    }//GEN-LAST:event_btnXoaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatHd;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane scrTblGioHang;
    private javax.swing.JScrollPane scrTblSanPham;
    private javax.swing.JSpinner spnSL;
    private MyCustom.MyTable tblGioHang;
    private MyCustom.MyTable tblSanPham;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMaSp;
    private javax.swing.JTextField txtTenSP;
    // End of variables declaration//GEN-END:variables
}
